{smcl}
{com}{sf}{ul off}{txt}
{com}. 
. 
. //STEP 13: CORRELATION MATRIX BETWEEN EPIGENTIC AGE ACCELERATION, EPIGENETIC CLOCKS AND TL VARIABLES//
. 
. use "E:\16GBBACKUPUSB\BACKUP_USB_SEPTEMBER2014\SUMMER_STUDENT_2025\HRS_NHANES_HANDLS_TLEPIGENMORT\FINAL_DATA\HRS\HRS_TLEPIGENMORT",clear
{txt}
{com}. 
. 
. // Step 1: Run the correlation command and save the matrix
. corr zHorvathAgeEAA zHannumAgeEAA zPhenoAgeEAA zGrimAgeMortEAA zDunedinPoAm ztelomean_no_outliers  
{txt}(obs=1,029)

             {c |} zHorva~A zHannu~A zPheno~A zGrimA~A zDuned~m ztelom~s
{hline 13}{c +}{hline 54}
zHorvathAg~A {c |}{res}   1.0000
{txt}zHannumAge~A {c |}{res}   0.4524   1.0000
{txt}zPhenoAgeEAA {c |}{res}   0.2507   0.4334   1.0000
{txt}zGrimAgeMo~A {c |}{res}   0.1170   0.3211   0.3714   1.0000
{txt}zDunedinPoAm {c |}{res}   0.1317   0.1824   0.2544   0.6313   1.0000
{txt}ztelomean_~s {c |}{res}   0.0018  -0.0039   0.0006  -0.0561  -0.0386   1.0000

{txt}
{com}. matrix C = r(C)
{txt}
{com}. 
. // Step 2: Clear the current dataset (optional if you don't need it)
. clear
{txt}
{com}. 
. // Step 3: Convert the matrix to a dataset with unique variable names
. svmat C, names(col)
{txt}number of observations will be reset to 6
Press any key to continue, or Break to abort
{p}
Number of observations ({bf:_N}) was 0,
now 6.
{p_end}

{com}. 
. // Step 4: Save the dataset as a CSV file
. export delimited using "E:\16GBBACKUPUSB\BACKUP_USB_SEPTEMBER2014\SUMMER_STUDENT_2025\HRS_NHANES_HANDLS_TLEPIGENMORT\OUTPUT\HRS_correlation_matrix.csv", replace
{res}{txt}file {bf:E:\16GBBACKUPUSB\BACKUP_USB_SEPTEMBER2014\SUMMER_STUDENT_2025\HRS_NHANES_HANDLS_TLEPIGENMORT\OUTPUT\HRS_correlation_matrix.csv} saved

{com}. 
. **Add a column in excel sheet and re-type labels mannually. Change labels as needed. 
. 
. 
. // Step 5: Reload your original dataset if needed
. 
. use "E:\16GBBACKUPUSB\BACKUP_USB_SEPTEMBER2014\SUMMER_STUDENT_2025\HRS_NHANES_HANDLS_TLEPIGENMORT\FINAL_DATA\HRS\HRS_TLEPIGENMORT",clear
{txt}
{com}. 
. 
. //STEP 13: RStudio code for heatmap: Run IN RStudio//
. 
. **# Load necessary libraries
. **library(ggplot2)
. **library(reshape2)
. 
. **# Read the correlation matrix from the CSV file
. **file_path <- "E:/16GBBACKUPUSB/BACKUP_USB_SEPTEMBER2014/SUMMER_STUDENT_2025/HRS_NHANES_HANDLS_TLEPIGENMORT/OUTPUT/HRS_correlation_matrix_final.csv"
. **cor_matrix <- read.csv(file_path, check.names = FALSE)
. 
. **# Check if row names need to be set
. **if (is.character(cor_matrix[[1]])) {c -(}
. **  rownames(cor_matrix) <- cor_matrix[[1]]
. **  cor_matrix <- cor_matrix[, -1]
. **{c )-}
. 
. **# Ensure all columns and rows are numeric
. **cor_matrix <- as.matrix(cor_matrix)
. **
. **# Melt the matrix for ggplot2
. **cor_data <- melt(cor_matrix)
. **
. **# Create the heatmap
. **ggplot(data = cor_data, aes(x = Var1, y = Var2, fill = value)) +
. **  geom_tile(color = "white") +
. **  scale_fill_gradient2(low = "blue", mid = "white", high = "red", midpoint = 0,
. **                       limits = c(-1, 1),  # Make the legend symmetrical
. **                       name = "Correlation") +
. **  theme_minimal() +
. **  theme(
. **    axis.text.x = element_text(angle = 45, vjust = 1, hjust = 1),  # Rotate x-axis labels
. **    axis.text.y = element_text(angle = 0, hjust = 1)               # Ensure y-axis labels are present
. **  ) +
. **  labs(x = "", y = "") +
. **  coord_fixed()
. 
. 
. 
. 
. 
. capture log close
{smcl}
{com}{sf}{ul off}